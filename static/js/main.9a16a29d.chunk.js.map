{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","GOOD_BY_LENGTH","GOOD_BY_NAME","App","useState","sortGoods","setSortGoods","isReverseGoods","setIsReversedGoods","sortedGoods","goods","preperedGoods","sort","good1","good2","length","localeCompare","reverse","getPreperedGoods","isSortByLength","isSortByName","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,SACjBC,EAAe,iBAyBd,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6CF,oBAAS,GAAtD,mBAAOG,EAAP,KAAuBC,EAAvB,KACMC,EA1BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,OAASD,EAAMC,OAC9B,KAAKb,EACH,OAAOW,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAMaO,CAClBlB,EACAK,EACAE,GAGIY,EAAiBd,IAAcJ,EAC/BmB,EAAef,IAAcH,EAEnC,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,IAEhBI,QAAS,kBAAMlB,EAAaJ,IAP9B,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYJ,IAEhBK,QAAS,kBAAMlB,EAAaL,IAP9B,4BAYA,wBACEqB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAoBD,IAPrC,sBAWEF,GAAaE,IAEb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,GAAmB,GACnBF,EAAa,KALjB,sBAaJ,6BACGG,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a16a29d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst GOOD_BY_LENGTH = 'length';\nconst GOOD_BY_NAME = 'alphabetically';\n\nfunction getPreperedGoods(goods, sortGoods, isReverseGoods) {\n  const preperedGoods = [...goods];\n\n  if (sortGoods) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortGoods) {\n        case GOOD_BY_LENGTH:\n          return good1.length - good2.length;\n        case GOOD_BY_NAME:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverseGoods) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortGoods, setSortGoods] = useState('');\n  const [isReverseGoods, setIsReversedGoods] = useState(false);\n  const sortedGoods = getPreperedGoods(\n    goodsFromServer,\n    sortGoods,\n    isReverseGoods,\n  );\n\n  const isSortByLength = sortGoods !== GOOD_BY_LENGTH;\n  const isSortByName = sortGoods !== GOOD_BY_NAME;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': isSortByName },\n          )}\n          onClick={() => setSortGoods(GOOD_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': isSortByLength },\n          )}\n          onClick={() => setSortGoods(GOOD_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReverseGoods },\n          )}\n          onClick={() => setIsReversedGoods(!isReverseGoods)}\n        >\n          Reverse\n        </button>\n        {(sortGoods || isReverseGoods)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversedGoods(false);\n              setSortGoods('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}